{
  "Resources": {
    "testingVPC86281437": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "testing-stack/testing/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "testing-stack/testing/VPC/Resource"
      }
    },
    "testingVPCRunnerVPCSubnet1Subnet0175468F": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/26",
        "VpcId": {
          "Ref": "testingVPC86281437"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "RunnerVPC"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "testing-stack/testing/VPC/RunnerVPCSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "testing-stack/testing/VPC/RunnerVPCSubnet1/Subnet"
      }
    },
    "testingVPCRunnerVPCSubnet1RouteTableD9AB0B7E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "testingVPC86281437"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "testing-stack/testing/VPC/RunnerVPCSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "testing-stack/testing/VPC/RunnerVPCSubnet1/RouteTable"
      }
    },
    "testingVPCRunnerVPCSubnet1RouteTableAssociationF2088989": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "testingVPCRunnerVPCSubnet1RouteTableD9AB0B7E"
        },
        "SubnetId": {
          "Ref": "testingVPCRunnerVPCSubnet1Subnet0175468F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "testing-stack/testing/VPC/RunnerVPCSubnet1/RouteTableAssociation"
      }
    },
    "testingVPCRunnerVPCSubnet1DefaultRouteBBF70DB8": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "testingVPCRunnerVPCSubnet1RouteTableD9AB0B7E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "testingVPCIGW0F38A741"
        }
      },
      "DependsOn": [
        "testingVPCVPCGW655FB08E"
      ],
      "Metadata": {
        "aws:cdk:path": "testing-stack/testing/VPC/RunnerVPCSubnet1/DefaultRoute"
      }
    },
    "testingVPCRunnerVPCSubnet2SubnetFA3DB085": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.64/26",
        "VpcId": {
          "Ref": "testingVPC86281437"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "RunnerVPC"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "testing-stack/testing/VPC/RunnerVPCSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "testing-stack/testing/VPC/RunnerVPCSubnet2/Subnet"
      }
    },
    "testingVPCRunnerVPCSubnet2RouteTable1B3F6E1E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "testingVPC86281437"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "testing-stack/testing/VPC/RunnerVPCSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "testing-stack/testing/VPC/RunnerVPCSubnet2/RouteTable"
      }
    },
    "testingVPCRunnerVPCSubnet2RouteTableAssociation24C902A9": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "testingVPCRunnerVPCSubnet2RouteTable1B3F6E1E"
        },
        "SubnetId": {
          "Ref": "testingVPCRunnerVPCSubnet2SubnetFA3DB085"
        }
      },
      "Metadata": {
        "aws:cdk:path": "testing-stack/testing/VPC/RunnerVPCSubnet2/RouteTableAssociation"
      }
    },
    "testingVPCRunnerVPCSubnet2DefaultRoute08FEB413": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "testingVPCRunnerVPCSubnet2RouteTable1B3F6E1E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "testingVPCIGW0F38A741"
        }
      },
      "DependsOn": [
        "testingVPCVPCGW655FB08E"
      ],
      "Metadata": {
        "aws:cdk:path": "testing-stack/testing/VPC/RunnerVPCSubnet2/DefaultRoute"
      }
    },
    "testingVPCIGW0F38A741": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "testing-stack/testing/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "testing-stack/testing/VPC/IGW"
      }
    },
    "testingVPCVPCGW655FB08E": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "testingVPC86281437"
        },
        "InternetGatewayId": {
          "Ref": "testingVPCIGW0F38A741"
        }
      },
      "Metadata": {
        "aws:cdk:path": "testing-stack/testing/VPC/VPCGW"
      }
    },
    "testingGitlabRunnerInstanceSecurityGroup411A80B0": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "testing-stack/testing/GitlabRunner/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Gitlab-Runner"
          }
        ],
        "VpcId": {
          "Ref": "testingVPC86281437"
        }
      },
      "Metadata": {
        "aws:cdk:path": "testing-stack/testing/GitlabRunner/InstanceSecurityGroup/Resource"
      }
    },
    "testingGitlabRunnerInstanceRoleDFCF3F3C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Gitlab-Runner"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "testing-stack/testing/GitlabRunner/InstanceRole/Resource"
      }
    },
    "testingGitlabRunnerInstanceProfile26901481": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "testingGitlabRunnerInstanceRoleDFCF3F3C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "testing-stack/testing/GitlabRunner/InstanceProfile"
      }
    },
    "testingGitlabRunner885F6B93": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 60
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "testingGitlabRunnerInstanceProfile26901481"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.large",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "testingGitlabRunnerInstanceSecurityGroup411A80B0",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "testingVPCRunnerVPCSubnet1Subnet0175468F"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Gitlab-Runner"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\nyum update -y\nyum install docker -y\nservice docker start\nusermod -aG docker ec2-user\nchmod +x /var/run/docker.sock\nservice docker restart &&  chkconfig docker on\ndocker run -d -v /home/ec2-user/.gitlab-runner:/etc/gitlab-runner -v /var/run/docker.sock:/var/run/docker.sock --name gitlab-runner-register gitlab/gitlab-runner:alpine register --non-interactive --url https://gitlab.com./ --registration-token GITLABTOKEN  --docker-volumes \"/var/run/docker.sock:/var/run/docker.sock\" --executor docker --docker-image \"alpine:latest\" --description \"Docker Runner\" --tag-list \"gitlab,runner,awscdk\" --docker-privileged\nsleep 2 && docker run --restart always -d -v /home/ec2-user/.gitlab-runner:/etc/gitlab-runner -v /var/run/docker.sock:/var/run/docker.sock --name gitlab-runner gitlab/gitlab-runner:alpine\nusermod -aG docker ssm-user"
        }
      },
      "DependsOn": [
        "testingGitlabRunnerInstanceRoleDFCF3F3C"
      ],
      "Metadata": {
        "aws:cdk:path": "testing-stack/testing/GitlabRunner/Resource"
      }
    }
  },
  "Outputs": {
    "testingRunnerID3E113277": {
      "Value": {
        "Ref": "testingGitlabRunner885F6B93"
      }
    }
  },
  "Parameters": {
    "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2"
    }
  }
}