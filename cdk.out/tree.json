{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "testing-stack": {
        "id": "testing-stack",
        "path": "testing-stack",
        "children": {
          "testing": {
            "id": "testing",
            "path": "testing-stack/testing",
            "children": {
              "VPC": {
                "id": "VPC",
                "path": "testing-stack/testing/VPC",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "testing-stack/testing/VPC/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/16",
                        "enableDnsHostnames": true,
                        "enableDnsSupport": true,
                        "instanceTenancy": "default",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "testing-stack/testing/VPC"
                          }
                        ]
                      }
                    }
                  },
                  "RunnerVPCSubnet1": {
                    "id": "RunnerVPCSubnet1",
                    "path": "testing-stack/testing/VPC/RunnerVPCSubnet1",
                    "children": {
                      "Subnet": {
                        "id": "Subnet",
                        "path": "testing-stack/testing/VPC/RunnerVPCSubnet1/Subnet",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                          "aws:cdk:cloudformation:props": {
                            "cidrBlock": "10.0.0.0/26",
                            "vpcId": {
                              "Ref": "testingVPC86281437"
                            },
                            "availabilityZone": {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::GetAZs": ""
                                }
                              ]
                            },
                            "mapPublicIpOnLaunch": true,
                            "tags": [
                              {
                                "key": "aws-cdk:subnet-name",
                                "value": "RunnerVPC"
                              },
                              {
                                "key": "aws-cdk:subnet-type",
                                "value": "Public"
                              },
                              {
                                "key": "Name",
                                "value": "testing-stack/testing/VPC/RunnerVPCSubnet1"
                              }
                            ]
                          }
                        }
                      },
                      "Acl": {
                        "id": "Acl",
                        "path": "testing-stack/testing/VPC/RunnerVPCSubnet1/Acl"
                      },
                      "RouteTable": {
                        "id": "RouteTable",
                        "path": "testing-stack/testing/VPC/RunnerVPCSubnet1/RouteTable",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                          "aws:cdk:cloudformation:props": {
                            "vpcId": {
                              "Ref": "testingVPC86281437"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "testing-stack/testing/VPC/RunnerVPCSubnet1"
                              }
                            ]
                          }
                        }
                      },
                      "RouteTableAssociation": {
                        "id": "RouteTableAssociation",
                        "path": "testing-stack/testing/VPC/RunnerVPCSubnet1/RouteTableAssociation",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "testingVPCRunnerVPCSubnet1RouteTableD9AB0B7E"
                            },
                            "subnetId": {
                              "Ref": "testingVPCRunnerVPCSubnet1Subnet0175468F"
                            }
                          }
                        }
                      },
                      "DefaultRoute": {
                        "id": "DefaultRoute",
                        "path": "testing-stack/testing/VPC/RunnerVPCSubnet1/DefaultRoute",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "testingVPCRunnerVPCSubnet1RouteTableD9AB0B7E"
                            },
                            "destinationCidrBlock": "0.0.0.0/0",
                            "gatewayId": {
                              "Ref": "testingVPCIGW0F38A741"
                            }
                          }
                        }
                      }
                    }
                  },
                  "RunnerVPCSubnet2": {
                    "id": "RunnerVPCSubnet2",
                    "path": "testing-stack/testing/VPC/RunnerVPCSubnet2",
                    "children": {
                      "Subnet": {
                        "id": "Subnet",
                        "path": "testing-stack/testing/VPC/RunnerVPCSubnet2/Subnet",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                          "aws:cdk:cloudformation:props": {
                            "cidrBlock": "10.0.0.64/26",
                            "vpcId": {
                              "Ref": "testingVPC86281437"
                            },
                            "availabilityZone": {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::GetAZs": ""
                                }
                              ]
                            },
                            "mapPublicIpOnLaunch": true,
                            "tags": [
                              {
                                "key": "aws-cdk:subnet-name",
                                "value": "RunnerVPC"
                              },
                              {
                                "key": "aws-cdk:subnet-type",
                                "value": "Public"
                              },
                              {
                                "key": "Name",
                                "value": "testing-stack/testing/VPC/RunnerVPCSubnet2"
                              }
                            ]
                          }
                        }
                      },
                      "Acl": {
                        "id": "Acl",
                        "path": "testing-stack/testing/VPC/RunnerVPCSubnet2/Acl"
                      },
                      "RouteTable": {
                        "id": "RouteTable",
                        "path": "testing-stack/testing/VPC/RunnerVPCSubnet2/RouteTable",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                          "aws:cdk:cloudformation:props": {
                            "vpcId": {
                              "Ref": "testingVPC86281437"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "testing-stack/testing/VPC/RunnerVPCSubnet2"
                              }
                            ]
                          }
                        }
                      },
                      "RouteTableAssociation": {
                        "id": "RouteTableAssociation",
                        "path": "testing-stack/testing/VPC/RunnerVPCSubnet2/RouteTableAssociation",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "testingVPCRunnerVPCSubnet2RouteTable1B3F6E1E"
                            },
                            "subnetId": {
                              "Ref": "testingVPCRunnerVPCSubnet2SubnetFA3DB085"
                            }
                          }
                        }
                      },
                      "DefaultRoute": {
                        "id": "DefaultRoute",
                        "path": "testing-stack/testing/VPC/RunnerVPCSubnet2/DefaultRoute",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "testingVPCRunnerVPCSubnet2RouteTable1B3F6E1E"
                            },
                            "destinationCidrBlock": "0.0.0.0/0",
                            "gatewayId": {
                              "Ref": "testingVPCIGW0F38A741"
                            }
                          }
                        }
                      }
                    }
                  },
                  "IGW": {
                    "id": "IGW",
                    "path": "testing-stack/testing/VPC/IGW",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "testing-stack/testing/VPC"
                          }
                        ]
                      }
                    }
                  },
                  "VPCGW": {
                    "id": "VPCGW",
                    "path": "testing-stack/testing/VPC/VPCGW",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "testingVPC86281437"
                        },
                        "internetGatewayId": {
                          "Ref": "testingVPCIGW0F38A741"
                        }
                      }
                    }
                  }
                }
              },
              "GitlabRunner": {
                "id": "GitlabRunner",
                "path": "testing-stack/testing/GitlabRunner",
                "children": {
                  "InstanceSecurityGroup": {
                    "id": "InstanceSecurityGroup",
                    "path": "testing-stack/testing/GitlabRunner/InstanceSecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "testing-stack/testing/GitlabRunner/InstanceSecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "testing-stack/testing/GitlabRunner/InstanceSecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "tags": [
                              {
                                "key": "Name",
                                "value": "Gitlab-Runner"
                              }
                            ],
                            "vpcId": {
                              "Ref": "testingVPC86281437"
                            }
                          }
                        }
                      }
                    }
                  },
                  "InstanceRole": {
                    "id": "InstanceRole",
                    "path": "testing-stack/testing/GitlabRunner/InstanceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "testing-stack/testing/GitlabRunner/InstanceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "ec2.",
                                          {
                                            "Ref": "AWS::URLSuffix"
                                          }
                                        ]
                                      ]
                                    }
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/AmazonSSMManagedInstanceCore"
                                  ]
                                ]
                              }
                            ],
                            "tags": [
                              {
                                "key": "Name",
                                "value": "Gitlab-Runner"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "InstanceProfile": {
                    "id": "InstanceProfile",
                    "path": "testing-stack/testing/GitlabRunner/InstanceProfile",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                      "aws:cdk:cloudformation:props": {
                        "roles": [
                          {
                            "Ref": "testingGitlabRunnerInstanceRoleDFCF3F3C"
                          }
                        ]
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "testing-stack/testing/GitlabRunner/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Instance",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "blockDeviceMappings": [
                          {
                            "deviceName": "/dev/xvda",
                            "ebs": {
                              "volumeSize": 60
                            }
                          }
                        ],
                        "iamInstanceProfile": {
                          "Ref": "testingGitlabRunnerInstanceProfile26901481"
                        },
                        "imageId": {
                          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
                        },
                        "instanceType": "t3.small",
                        "securityGroupIds": [
                          {
                            "Fn::GetAtt": [
                              "testingGitlabRunnerInstanceSecurityGroup411A80B0",
                              "GroupId"
                            ]
                          }
                        ],
                        "subnetId": {
                          "Ref": "testingVPCRunnerVPCSubnet1Subnet0175468F"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Gitlab-Runner"
                          }
                        ],
                        "userData": {
                          "Fn::Base64": "#!/bin/bash\nyum update -y\nyum install docker -y\nservice docker start\nusermod -aG docker ec2-user\nchmod +x /var/run/docker.sock\nservice docker restart &&  chkconfig docker on\ndocker run -d -v /home/ec2-user/.gitlab-runner:/etc/gitlab-runner -v /var/run/docker.sock:/var/run/docker.sock --name gitlab-runner-register gitlab/gitlab-runner:alpine register --non-interactive --url https://gitlab.com./ --registration-token GITLAB_TOKEN  --docker-volumes \"/var/run/docker.sock:/var/run/docker.sock\" --executor docker --docker-image \"alpine:latest\" --description \"Docker Runner\" --tag-list \"aa,bb,cc\" --docker-privileged\nsleep 2 && docker run --restart always -d -v /home/ec2-user/.gitlab-runner:/etc/gitlab-runner -v /var/run/docker.sock:/var/run/docker.sock --name gitlab-runner gitlab/gitlab-runner:alpine\nusermod -aG docker ssm-user"
                        }
                      }
                    }
                  }
                }
              },
              "Runner-ID": {
                "id": "Runner-ID",
                "path": "testing-stack/testing/Runner-ID"
              }
            }
          },
          "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "testing-stack/SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter"
          },
          "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "testing-stack/SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118"
          }
        }
      }
    }
  }
}